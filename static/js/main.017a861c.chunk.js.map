{"version":3,"sources":["App.js","Benchmark.js","GenderGrad.js","RaceGrad.js","Persistence.js","Grid.js","reportWebVitals.js","index.js"],"names":["App","class","Benchmark","data","React","useMemo","label","axes","primary","type","position","style","width","height","labels","datasets","backgroundColor","legend","display","fontColor","fontSize","options","scales","yAxes","stacked","ticks","beginAtZero","xAxes","tooltips","mode","StackedBar","fill","borderColor","LineChart","borderWidth","MultiType","ResponsiveReactGridLayout","WidthProvider","Responsive","chart1","chart2","GenderGrad","chart3","RaceGrad","chart4","Persistence","Grid","gridItems","id","name","chart","layouts","lg","i","x","y","w","h","measureBeforeMount","className","autoSize","rowHeight","this","props","isDragable","isResizable","onDrag","onDragging","onDragStop","onMoveCard","onResizeStop","onResizeCard","margin","map","item","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.017a861c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div class=\"banner\">\r\n    <div class=\"title\">\r\n    <h1>Diversity in CS at PSU</h1>\r\n    </div>\r\n \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport { Chart } from 'react-charts'\r\n \r\nfunction Benchmark() {\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        label: 'Series 1',\r\n        data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\r\n      },\r\n      {\r\n        label: 'Series 2',\r\n        data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\r\n      }\r\n    ],\r\n    []\r\n  )\r\n \r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, type: 'linear', position: 'bottom' },\r\n      { type: 'linear', position: 'left' }\r\n    ],\r\n    []\r\n  )\r\n \r\n  const lineChart = (\r\n    // A react-chart hyper-responsively and continuously fills the available\r\n    // space of its parent element automatically\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Chart data={data} axes={axes} />\r\n    </div>\r\n  )\r\n  return lineChart;\r\n}\r\nexport default Benchmark;                              ","import React from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport './GenderGrad.css'\r\n\r\n \r\nconst data = {\r\n    labels: ['2015', '2016', '2017', '2018', '2019'],\r\n    datasets: [\r\n    \r\n      {\r\n        label: 'Male',\r\n        data: [86, 95, 98, 130, 155],\r\n        backgroundColor: 'rgb(249, 153, 0)',\r\n      },\r\n      {\r\n        label: 'Legal Sex Unknown',\r\n        data: [1, 2, 2, 1, 2],\r\n        backgroundColor: 'rgb(192,192,192)',\r\n      },\r\n      {\r\n        label: 'Female',\r\n        data: [10, 19, 12, 15, 22],\r\n        backgroundColor: 'rgb(252, 70, 26)' ,\r\n      }\r\n    ],\r\n  }\r\n  \r\n  const legend = {\r\n    display: true,\r\n    position: \"bottom\",\r\n    labels: {\r\n      fontColor: \"#323130\",\r\n      fontSize: 14\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          stacked: true,\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          stacked: true,\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      mode: 'label',\r\n  }\r\n  }\r\n  \r\n  const StackedBar = () => (\r\n    \r\n      \r\n      <Bar data={data} legend={legend} options={options} />\r\n   \r\n  )\r\n  \r\n  export default StackedBar","import React from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst data = {\r\n    labels: ['2015', '2016', '2017', '2018', '2019'],\r\n    datasets: [\r\n      {\r\n        label: 'Asian',\r\n        data: [11, 18, 18, 13, 24],\r\n        fill: false,\r\n        backgroundColor: 'rgb(37, 45, 72)',\r\n        borderColor: 'rgba(37, 45, 72, 0.5)',\r\n      },\r\n      {\r\n        label: 'Black or African American',\r\n        data: [1, 4, 2, 1, 1],\r\n        fill: false,\r\n        backgroundColor: 'rgb(249, 153, 0)',\r\n        borderColor: 'rgba(249, 153, 0.5)',\r\n      },\r\n      {\r\n        label: 'Hispanic or Latino',\r\n        data: [4, 8, 6, 15, 6],\r\n        fill: false,\r\n        backgroundColor: 'rgb(242, 119, 117)',\r\n        borderColor: 'rgba(242, 119, 117, 0.5)',\r\n      },\r\n      {\r\n        label: 'International',\r\n        data: [6,4,7,18,17],\r\n        fill: false,\r\n        backgroundColor: 'rgb(0, 109, 140)',\r\n        borderColor: 'rgba(0, 109, 140, 0.5)',\r\n      },\r\n      {\r\n        label: 'Two or More Races',\r\n        data: [2,4,6,10,10],\r\n        fill: false,\r\n        backgroundColor: 'rgb(252, 70, 26)',\r\n        borderColor: 'rgba(252, 70, 26, 0.5)',\r\n      },\r\n      {\r\n        label: 'Unknown',\r\n        data: [7,8,9,12,9],\r\n        fill: false,\r\n        backgroundColor: 'rgb(192,192,192)',\r\n        borderColor: 'rgba(192,192,192, 0.5)',\r\n      },\r\n      {\r\n        label: 'White',\r\n        data: [66,70,64,77,112],\r\n        fill: false,\r\n        backgroundColor: 'rgb(0, 0, 0)',\r\n        borderColor: 'rgba(0, 0, 0, 0.5)',\r\n      }\r\n    ],\r\n  }\r\n  \r\n  const legend = {\r\n    display: true,\r\n    position: \"bottom\",\r\n    labels: {\r\n      fontColor: \"#323130\",\r\n      fontSize: 14\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n        mode: 'label',\r\n    }\r\n  }\r\n  \r\n  const LineChart = () => (\r\n    \r\n      <Line data={data} legend={legend} options={options} />\r\n    \r\n  )\r\n  \r\n  export default LineChart","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst data = {\r\n  labels: [2015, 2016, 2017, 2018, 2019],\r\n  datasets: [\r\n    {\r\n      type: \"line\",\r\n      label: \"Overall Starting Cohort\",\r\n      borderColor: \"rgb(0, 0, 0)\",\r\n      borderWidth: 2,\r\n      fill: false,\r\n      data: [361, 313, 382, 355, 315],\r\n    },\r\n    {\r\n      type: \"line\",\r\n      label: \"Female Starting Cohort\",\r\n      borderColor: \"rgb(252, 70, 26)\",\r\n      borderWidth: 2,\r\n      fill: false,\r\n      data: [59, 54, 65, 70, 58],\r\n    },\r\n    {\r\n      type: \"line\",\r\n      label: \"Male Starting Cohort\",\r\n      borderColor: \"rgb(249, 153, 0)\",\r\n      borderWidth: 2,\r\n      fill: false,\r\n      data: [294,254,312,280,252],\r\n    },\r\n    {\r\n        type: \"bar\",\r\n        label: \"Overall Persisted\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.7)\",\r\n        data: [124,153,211,243,0],\r\n      },\r\n    {\r\n      type: \"bar\",\r\n      label: \"Female Persisted\",\r\n      backgroundColor: \"rgb(252, 70, 26)\",\r\n      data: [18, 15, 35, 39, 0],\r\n    },\r\n    {\r\n      type: \"bar\",\r\n      label: \"Male Persisted\",\r\n      backgroundColor: \"rgb(249, 153, 0)\",\r\n      data: [103, 137, 173, 202, 0],\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n        mode: 'label',\r\n    }\r\n  }\r\n\r\nconst MultiType = () => <Bar data={data} options={options}/>;\r\n\r\nexport default MultiType;\r\n","import React from \"react\";\r\nimport \"./Grid.css\";\r\nimport Benchmark from \"./Benchmark.js\";\r\nimport GenderGrad from \"./GenderGrad.js\";\r\nimport RaceGrad from \"./RaceGrad.js\";\r\nimport Persistence from \"./Persistence.js\"\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\n//https://www.npmjs.com/package/react-grid-layout#installation\r\n\r\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\r\n\r\n//placeholder for a benchmark chart\r\nconst chart1 = Benchmark;\r\n\r\n//placeholder for second chart\r\nconst chart2 = GenderGrad;\r\n\r\n//placeholder for third chart\r\nconst chart3 = RaceGrad;\r\n\r\n//placeholder for fourth chart\r\nconst chart4 = Persistence;\r\n\r\nclass Grid extends React.Component {\r\n  render() {\r\n    const gridItems = [\r\n      { id: 1, name: \"PSU compared to Tier One CS\", chart: chart1},\r\n      { id: 2, name: \"PSU CS Grad Class by Legal Sex\", chart: chart2},\r\n      { id: 3, name: \"PSU CS Grad by Ethnicity\", chart: chart3},\r\n      { id: 4, name: \"PSU CS Persistence\",chart: chart4},\r\n    ];\r\n\r\n    const layout = [\r\n      { i: \"1\", x: 0, y: 0, w: 5, h: 3 },\r\n      { i: \"2\", x: 5, y: 0, w: 5, h: 3 },\r\n      { i: \"3\", x: 0, y: 0, w: 5, h: 3 },\r\n      { i: \"4\", x: 5, y: 0, w: 5, h: 3 },\r\n    ];\r\n\r\n    return (\r\n        <div class = \"grid\">\r\n      <ResponsiveReactGridLayout\r\n        //layouts={{ lg:layout}, {md:layout}, {sm:layout}}\r\n        layouts={{ lg: layout }}\r\n        //breakpoints={{lg: 1200, md: 996, sm: 768}}\r\n        measureBeforeMount={true}\r\n        className=\"layout\"\r\n        autoSize={true}\r\n        rowHeight={this.props.rowHeight}\r\n        isDragable={true}\r\n        isResizable={true}\r\n        onDrag={this.onDragging}\r\n        onDragStop={this.onMoveCard}\r\n        onResizeStop={this.onResizeCard}\r\n        margin={[20, 20]}\r\n      >\r\n        {gridItems.map((item, i) => {\r\n          return (\r\n            <div key={item.id} className=\"grid-item\">\r\n              <h3>{item.name}</h3>\r\n              <div\r\n                style={{\r\n                  width: \"90%\",\r\n                  height: \"80%\",\r\n                  margin: \"0 auto\"\r\n                }}\r\n              >\r\n                <item.chart />\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </ResponsiveReactGridLayout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport Grid from \"./Grid\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App />\r\n    <Grid />\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}